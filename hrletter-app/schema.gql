# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input EmployeeInput {
  employeeID: String!
  address: String!
  agreementPeriod: Float!
  createdBy: String!
  updatedBy: String!
  deletedBy: String!
  dateOfJoining: DateTime!
  dateOfRelieving: DateTime!
  departmentID: String!
  designation: String!
  email: String!
  firstName: String!
  lastName: String!
  lastUpdateDate: DateTime!
  password: String!
  periodEndDdate: DateTime!
  periodOfAppraisal: DateTime!
  periodStartDate: DateTime!
  phoneNumber: String!
  registrationLink: String!
  revisedAmount: Float!
  salary: Float!
  status: String!
  tagCode: String!
  tenureOfService: Float!
}

type EmployeeSpecific {
  employeeID: String!
  address: String!
  designation: String!
  email: String!
  firstName: String!
  lastName: String!
  phoneNumber: String!
}

type EmployeeType {
  employeeID: String!
  officeID: String!
  address: String!
  agreementPeriod: Float!
  createdBy: String!
  updatedBy: String!
  deletedBy: String!
  createdOn: DateTime!
  dateOfJoining: DateTime!
  dateOfRelieving: DateTime!
  departmentID: String!
  designation: String!
  email: String!
  firstName: String!
  lastName: String!
  lastUpdateDate: DateTime
  password: String!
  periodEndDdate: DateTime!
  periodOfAppraisal: DateTime!
  periodStartDate: DateTime!
  phoneNumber: String!
  registrationLink: String!
  revisedAmount: Float!
  salary: Float!
  status: String!
  tagCode: String!
  tenureOfService: Float!
}

input EntityInput {
  entityType: String!
}

type EntityType {
  entityID: String!
  entityType: String!
  createdBy: String
  createdOn: DateTime!
  deletedBy: String
  lastUpdateDate: DateTime!
  updatedBy: String
}

type Mutation {
  createEntity(entityInput: EntityInput!): EntityType!
  deleteEntity(entityType: String!): EntityType!
  updateEntity(entityType: String!, entityId: String!): EntityType!
  createEmployee(employeeInput: EmployeeInput!): EmployeeType!
  deleteEmployee(employeeId: String!): EmployeeType!
  updateEmployee(employeeInput: EmployeeInput!, employeeId: String!): EmployeeType!
}

type Query {
  hello: String!
  findAllEntities: [EntityType!]!
  findAllEmployees: [EmployeeSpecific!]!
}

type UserType {
  userID: String!
  firstName: String!
  lastName: String!
  email: String!
  userStatus: String!
  password: String!
  createdBy: String
  createdOn: DateTime!
  deletedBy: String
  lastUpdateDate: DateTime!
  updatedBy: String
}
